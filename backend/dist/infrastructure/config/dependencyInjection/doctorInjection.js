"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.doctor = exports.slot = exports.appointment = exports.user = exports.wallet = exports.report = exports.message = exports.department = exports.auth = void 0;
const authController_1 = require("../../../interfaces/controller/doctorController/authController");
const departnemntController_1 = require("../../../interfaces/controller/doctorController/departnemntController");
const messageController_1 = require("../../../interfaces/controller/doctorController/messageController");
const reportController_1 = require("../../../interfaces/controller/doctorController/reportController");
const walletController_1 = require("../../../interfaces/controller/doctorController/walletController");
const userController_1 = require("../../../interfaces/controller/doctorController/userController");
const appoinmentController_1 = require("../../../interfaces/controller/doctorController/appoinmentController");
const slotController_1 = require("../../../interfaces/controller/doctorController/slotController");
const doctorProfileController_1 = require("../../../interfaces/controller/doctorController/doctorProfileController");
const DocRegister_1 = require("../../../application/usecase/registration/DocRegister");
const DoctorLogin_1 = require("../../../application/usecase/registration/DoctorLogin");
const DoctorReapply_1 = require("../../../application/usecase/registration/DoctorReapply");
const DoctorOtpCreation_1 = require("../../../application/usecase/otp/DoctorOtpCreation");
const OtpDoctorVerification_1 = require("../../../application/usecase/otp/OtpDoctorVerification");
const DoctorPasswordRest_1 = require("../../../application/usecase/registration/DoctorPasswordRest");
const GetAllUnblockedDept_1 = require("../../../application/usecase/department/GetAllUnblockedDept");
const GetAllMessages_1 = require("../../../application/usecase/conversation/GetAllMessages");
const GetUnreadMessageCount_1 = require("../../../application/usecase/conversation/GetUnreadMessageCount");
const DeleteMessage_1 = require("../../../application/usecase/conversation/DeleteMessage");
const Addreport_1 = require("../../../application/usecase/report/Addreport");
const GetDoctorWallet_1 = require("../../../application/usecase/wallet/GetDoctorWallet");
const GetUserBysort_1 = require("../../../application/usecase/user/GetUserBysort");
const GetDoctorAppointments_1 = require("../../../application/usecase/appoinment/GetDoctorAppointments");
const ChangeAppointmentStatus_1 = require("../../../application/usecase/appoinment/ChangeAppointmentStatus");
const GetSingleAppoinment_1 = require("../../../application/usecase/appoinment/GetSingleAppoinment");
const RescheduleAppoinment_1 = require("../../../application/usecase/appoinment/RescheduleAppoinment");
const GetDoctorAppointmentCount_1 = require("../../../application/usecase/appoinment/GetDoctorAppointmentCount");
const GetFilterforDoc_1 = require("../../../application/usecase/appoinment/GetFilterforDoc");
const CreateFollowUp_1 = require("../../../application/usecase/appoinment/CreateFollowUp");
const GetPage_1 = require("../../../application/usecase/appoinment/GetPage");
const CreateSlot_1 = require("../../../application/usecase/slot/CreateSlot");
const GetRecurringSlot_1 = require("../../../application/usecase/slot/GetRecurringSlot");
const CancelRecurringSlot_1 = require("../../../application/usecase/slot/CancelRecurringSlot");
const CancelSlot_1 = require("../../../application/usecase/slot/CancelSlot");
const GetSlotByDate_1 = require("../../../application/usecase/slot/GetSlotByDate");
const EditSlot_1 = require("../../../application/usecase/slot/EditSlot");
const GetSingleDoctor_1 = require("../../../application/usecase/doctor/GetSingleDoctor");
const UpdateDoctorProfile_1 = require("../../../application/usecase/doctor/UpdateDoctorProfile");
const MessageTimeUpdationForDoc_1 = require("../../../application/usecase/conversation/MessageTimeUpdationForDoc");
const GetDepartment_1 = require("../../../application/usecase/department/GetDepartment");
const RegistrationRepositoryImpl_1 = require("../../repository/RegistrationRepositoryImpl");
const DepartmentRepositoryImpl_1 = require("../../repository/DepartmentRepositoryImpl");
const ConversationRepositoryImpl_ts_1 = require("../../repository/ConversationRepositoryImpl.ts");
const ReportRepositoryImpl_1 = require("../../repository/ReportRepositoryImpl");
const WalletRepositoryImpl_1 = require("../../repository/WalletRepositoryImpl");
const UserRepositoryImpl_1 = require("../../repository/UserRepositoryImpl");
const AppointmentRepositoryImpl_1 = require("../../repository/AppointmentRepositoryImpl");
const SlotRepositoryImpl_1 = require("../../repository/SlotRepositoryImpl");
const DoctorRepositoryImpl_ts_1 = require("../../repository/DoctorRepositoryImpl.ts");
const mongoregrepository = new RegistrationRepositoryImpl_1.MongoRegRepository();
const mongodeptRepository = new DepartmentRepositoryImpl_1.MongoDeptRepository();
const mongoConversationRepo = new ConversationRepositoryImpl_ts_1.MongoConversationRepo();
const mongoreportrepository = new ReportRepositoryImpl_1.MongoreportRepository();
const mongoWalletRepository = new WalletRepositoryImpl_1.MongoWalletRepository();
const mongoUserRepository = new UserRepositoryImpl_1.MongoUserRepository();
const mongoAppointmentRepository = new AppointmentRepositoryImpl_1.MongoAppointmentRepository();
const mongoSlotRepostory = new SlotRepositoryImpl_1.MongoSlotRepostory();
const mongodocRepository = new DoctorRepositoryImpl_ts_1.MongoDocRepository();
const doctorregister = new DocRegister_1.DocRegister(mongodocRepository);
const doclogin = new DoctorLogin_1.DoctorLogin(mongodocRepository);
const docreapply = new DoctorReapply_1.DocReapply(mongodocRepository);
const otpdocCreation = new DoctorOtpCreation_1.OtpdocCretion(mongoregrepository);
const doctorotpverify = new OtpDoctorVerification_1.DoctorOtpVerify(mongoregrepository);
const doctorpassreset = new DoctorPasswordRest_1.DoctorPasswordRest(mongoregrepository);
exports.auth = new authController_1.DoctorAuthController(doctorregister, doclogin, docreapply, otpdocCreation, doctorotpverify, doctorpassreset);
const getallunblockedept = new GetAllUnblockedDept_1.GetAllUnblockedDept(mongodeptRepository);
const gGetDept = new GetDepartment_1.GetDept(mongodeptRepository);
exports.department = new departnemntController_1.DepartmentController(getallunblockedept, gGetDept);
const getAllMessages = new GetAllMessages_1.GetAllMessages(mongoConversationRepo);
const getUnreadCountMessage = new GetUnreadMessageCount_1.GetUnreadCountMessage(mongoConversationRepo);
const deletemessage = new DeleteMessage_1.Deletemessage(mongoConversationRepo);
exports.message = new messageController_1.MessageController(getAllMessages, deletemessage, getUnreadCountMessage);
const addreport = new Addreport_1.Addreport(mongoreportrepository);
exports.report = new reportController_1.ReportController(addreport);
const getDoctorWallet = new GetDoctorWallet_1.GetDoctorWallet(mongoWalletRepository);
exports.wallet = new walletController_1.DoctorWalletController(getDoctorWallet);
const getsortuser = new GetUserBysort_1.GetUserBysort(mongoUserRepository);
const meassgeupdation = new MessageTimeUpdationForDoc_1.MessageTimeUpdation(mongoConversationRepo);
exports.user = new userController_1.UserManagementController(getsortuser, meassgeupdation);
const getDoctorAppointment = new GetDoctorAppointments_1.GetdoctorAppointment(mongoAppointmentRepository);
const changeStatusAppointment = new ChangeAppointmentStatus_1.ChangestatusAppointment(mongoAppointmentRepository, mongoSlotRepostory, mongoWalletRepository);
const getSingleAppointment = new GetSingleAppoinment_1.GetSingleappoinment(mongoAppointmentRepository);
const reschedule = new RescheduleAppoinment_1.Reshedule(mongoAppointmentRepository, mongoAppointmentRepository, mongoSlotRepostory);
const getDoctorAppointmentCount = new GetDoctorAppointmentCount_1.GetdoctorAppointmentCount(mongoAppointmentRepository);
const getFilterForDoc = new GetFilterforDoc_1.GetFilterfordoc(mongoAppointmentRepository);
const createFollowUp = new CreateFollowUp_1.Createfollowup(mongoAppointmentRepository, mongoAppointmentRepository, mongoSlotRepostory);
const getPage = new GetPage_1.GetPage(mongoAppointmentRepository);
exports.appointment = new appoinmentController_1.DoctorAppointmentController(getDoctorAppointment, changeStatusAppointment, getSingleAppointment, reschedule, getDoctorAppointmentCount, getFilterForDoc, createFollowUp, getPage);
const createSlot = new CreateSlot_1.CreateSlot(mongoSlotRepostory, mongoSlotRepostory);
const getRecurringSlot = new GetRecurringSlot_1.GetRecurringSlot(mongoSlotRepostory);
const cancelRecurringSlot = new CancelRecurringSlot_1.CancelRecurringSlot(mongoSlotRepostory);
const cancelSlot = new CancelSlot_1.CancelSlot(mongoSlotRepostory, mongoSlotRepostory);
const getSlotByDate = new GetSlotByDate_1.GetSlotByDate(mongoSlotRepostory);
const editrecslot = new EditSlot_1.EditSlot(mongoSlotRepostory, mongoSlotRepostory);
exports.slot = new slotController_1.DoctorSlotController(createSlot, getRecurringSlot, cancelRecurringSlot, cancelSlot, getSlotByDate, editrecslot);
const fetchSingleDoctor = new GetSingleDoctor_1.FetchSingleDoctor(mongodocRepository);
const docprofile = new UpdateDoctorProfile_1.Docprofile(mongodocRepository);
exports.doctor = new doctorProfileController_1.DoctorProfileController(docprofile, fetchSingleDoctor);
